import Rise from "../../framework/rise/Rise";
<% var buf = users.Json[0] -%>
<% var name = users.Name -%>

export default class <%= name %>{
    <%_ var id = "" _%>
    <%_ var index = 0 _%>
    <%_ for (let key in buf) { -%>
    <%_ let type = buf[key].type _%>
    <%_ if (type == "int" || type == "long") { _%>
        //<%= buf[key].label %>
        private _<%= key %>:number = 0;
    <%_ } _%>
    <%_ if (type == "string") { _%>
        //<%= buf[key].label %>
        private _<%= key %>:string = "";
    <%_ } _%>
    <%_ if (type == "intArray") { _%>
        //<%= buf[key].label %>
        private _<%= key %>:number[] = [];
    <%_ } _%>
    <%_ if (index == 0) { _%>
        <%_ var id = key _%>
    <%_ } _%>
    <%_ index++; _%> 
    <%_ } -%>
    
    <%_ for (let key in buf) { -%>
        <%_ let type = buf[key].type -%>
    <%_ if (type == "int" || type == "long") { -%>
        /**
        * 获取<%= buf[key].label %>
        */
        public get <%= key %>():number {
            return this._<%= key %>;
        }
    <%_ } -%>
    <%_ if (type == "string") { -%>
        /**
        * 获取<%= buf[key].label %>
        */
        public get <%= key %>():string {
            return this._<%= key %>;
        }
    <%_ } -%>
    <%_ if (type == "intArray") { -%>
        /**
        * 获取<%= buf[key].label %>
        */
        public get <%= key %>():number[] {
            return this._<%= key %>;
        }
    <%_ } -%>
    <%_ } -%>
    
        /**
        * 根据唯一ID获取配置对象的数据，找不到返回undefined
        * @throws 配置还没加载的时候会抛异常
        */
        public static getByID(id:any):<%= name %> {
            return Rise.getConfigByNameAndID("<%= name %>", id);
        }
        /**
        * 获取所有该类型的配置
        */
        public static getAllData():any {
            return Rise.getAllConfigByName("<%= name %>");
        }
        /**
        * 获取主列的值
        */
        public getPrimaryKey(){
            return this._<%= id %>;
        }

        public init(data:string[]):void {
        <%_ let i = 0 -%>
        <%_ for (let key in buf) { -%>
        <%_ let type = buf[key].type -%>
        <%_ if (type == "int" || type == "long") { _%>
            this._<%= key %> = Number(data[<%= i %>]);
        <%_ } _%>
        <%_ if (type == "string") { _%>
            this._<%= key %> = data[<%= i %>];
        <%_ } _%>
        <%_ if (type == "intArray") { _%>
            if(!data[<%= i %>]) {
                this._<%= key %> = [];
            }
            else {
                let tmpArr = data[<%= i %>].split(",");
                for(let i = tmpArr.length - 1; i>=0; i--){
                    this._<%= key %>[i] = Number(tmpArr[i]);
                }
            }
        <%_ } _%>
        <%_ i++; _%>  
        <%_ } -%>
        }
    }
